# SPDX-FileCopyrightText: 2020 Serokell <https://serokell.io>
#
# SPDX-License-Identifier: MPL-2.0

name: multisig-proxy
version: 0
author: Serokell <hi@serokell.io>
github: stakerdao/multisig

description: Multisig proxy contract for Tezos and lightweight client for it

## Legal (be careful here)
## We have some guidelines in Notion:
## https://www.notion.so/serokell/How-to-94ac7fac091a4327a9a812783ce2c2cd#9203b587722e43f9bd840b32a7ba25f9
## If the package is developed for a customer, most likely they are the copyright owners.
## Otherwise, most likely the copyright owner is Serokell.
# TODO: Figure out copyright, before making this public
copyright: 2020 Serokell <https://serokell.io>
# TODO: Choose aproppriate license before publishing
license-file: LICENSE

# We enable all extensions that we consider harmless by default.
# Maybe it spoils compilation times, we should check it, see INT-162.
# You may want to add NoImplicitPrelude here.
default-extensions:
  - AllowAmbiguousTypes
  - BangPatterns
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DerivingVia
  - EmptyCase
  - FlexibleContexts
  - FlexibleInstances
  - GADTs
  - GeneralizedNewtypeDeriving
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NegativeLiterals
  - NumDecimals
  - OverloadedLabels
  - OverloadedStrings
  - PatternSynonyms
  - PolyKinds
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - StrictData
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - UndecidableSuperClasses
  - ViewPatterns
  - NoImplicitPrelude

ghc-options:
  -Weverything
  -Wno-missing-exported-signatures
  -Wno-missing-import-lists
  -Wno-missed-specialisations
  -Wno-all-missed-specialisations
  -Wno-unsafe
  -Wno-safe
  -Wno-missing-local-signatures
  -Wno-monomorphism-restriction
  -Wno-implicit-prelude

when:
  - condition: impl(ghc >= 8.10.0)
    ghc-options:
      - -Wno-prepositive-qualified-module
      - -Wno-inferred-safe-imports
      - -Wno-missing-safe-haskell-mode

# Note that `hpack` (apparently) concatenates lists automatically.
# So if you define `dependencies` for a component, they will be concatenated
# with this list.
dependencies:
  # Usually base is used by all components.
  # However, you may want to use `base-noprelude` to be able to replace
  # the standard `Prelude` with a custom one.
  # Note that you can use cabal's mixins feature for that,
  # but it breaks `stack repl` (`cabal repl` works fine).
  # https://github.com/commercialhaskell/stack/issues/5077
  # Also it's recommended to setup bounds on the version here.
  - base

library:
  source-dirs: src
  dependencies:
    - morley
    - lorentz

executables:
  multisig-client:
    main:                Main.hs
    source-dirs:         app

tests:
  myproject-test:
    main:        Main.hs
    source-dirs: test
    # We often use tasty-discover.
    build-tools: tasty-discover:tasty-discover

    ghc-options:
    # tasty runs tests in parallel, so using multiple threads should be useful.
    - -threaded
    # should be harmless, but helps some people analyse something :shrug:
    - -eventlog

    # Enable -N to use multiple threads.
    # Increase allocation area by using the recommended -A64m option.
    # Also increase the allocation area for large objects with -AL256m,
    # since this area is shared between all threads and thus with high -N
    # values get used up too soon.
    #
    # With these options tests usually run faster.
    #
    # Weird quoting is required for cabal to correctly pass this as _one_ option,
    # otherwise it splits by spaces.
    - '"-with-rtsopts=-N -A64m -AL256m"'

    dependencies:
    - tasty
